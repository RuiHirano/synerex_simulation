// Code generated by protoc-gen-go. DO NOT EDIT.
// source: monitor.proto

package monitorapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Mes struct {
	Msgtype              string   `protobuf:"bytes,1,opt,name=msgtype,proto3" json:"msgtype,omitempty"`
	Chtype               int32    `protobuf:"varint,2,opt,name=chtype,proto3" json:"chtype,omitempty"`
	Src                  uint64   `protobuf:"varint,3,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  uint64   `protobuf:"varint,4,opt,name=dst,proto3" json:"dst,omitempty"`
	Args                 string   `protobuf:"bytes,5,opt,name=args,proto3" json:"args,omitempty"`
	FromId               string   `protobuf:"bytes,6,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId                 string   `protobuf:"bytes,7,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	Id                   uint64   `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
	Tgt                  uint64   `protobuf:"varint,9,opt,name=tgt,proto3" json:"tgt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mes) Reset()         { *m = Mes{} }
func (m *Mes) String() string { return proto.CompactTextString(m) }
func (*Mes) ProtoMessage()    {}
func (*Mes) Descriptor() ([]byte, []int) {
	return fileDescriptor_monitor_0ed23479230bd9d3, []int{0}
}
func (m *Mes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mes.Unmarshal(m, b)
}
func (m *Mes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mes.Marshal(b, m, deterministic)
}
func (dst *Mes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mes.Merge(dst, src)
}
func (m *Mes) XXX_Size() int {
	return xxx_messageInfo_Mes.Size(m)
}
func (m *Mes) XXX_DiscardUnknown() {
	xxx_messageInfo_Mes.DiscardUnknown(m)
}

var xxx_messageInfo_Mes proto.InternalMessageInfo

func (m *Mes) GetMsgtype() string {
	if m != nil {
		return m.Msgtype
	}
	return ""
}

func (m *Mes) GetChtype() int32 {
	if m != nil {
		return m.Chtype
	}
	return 0
}

func (m *Mes) GetSrc() uint64 {
	if m != nil {
		return m.Src
	}
	return 0
}

func (m *Mes) GetDst() uint64 {
	if m != nil {
		return m.Dst
	}
	return 0
}

func (m *Mes) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *Mes) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *Mes) GetToId() string {
	if m != nil {
		return m.ToId
	}
	return ""
}

func (m *Mes) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Mes) GetTgt() uint64 {
	if m != nil {
		return m.Tgt
	}
	return 0
}

type Response struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_monitor_0ed23479230bd9d3, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*Mes)(nil), "monitorapi.Mes")
	proto.RegisterType((*Response)(nil), "monitorapi.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitorClient is the client API for Monitor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitorClient interface {
	SendReport(ctx context.Context, in *Mes, opts ...grpc.CallOption) (*Response, error)
}

type monitorClient struct {
	cc *grpc.ClientConn
}

func NewMonitorClient(cc *grpc.ClientConn) MonitorClient {
	return &monitorClient{cc}
}

func (c *monitorClient) SendReport(ctx context.Context, in *Mes, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/monitorapi.Monitor/SendReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitorServer is the server API for Monitor service.
type MonitorServer interface {
	SendReport(context.Context, *Mes) (*Response, error)
}

func RegisterMonitorServer(s *grpc.Server, srv MonitorServer) {
	s.RegisterService(&_Monitor_serviceDesc, srv)
}

func _Monitor_SendReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitorServer).SendReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitorapi.Monitor/SendReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitorServer).SendReport(ctx, req.(*Mes))
	}
	return interceptor(ctx, in, info, handler)
}

var _Monitor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitorapi.Monitor",
	HandlerType: (*MonitorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendReport",
			Handler:    _Monitor_SendReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "monitor.proto",
}

func init() { proto.RegisterFile("monitor.proto", fileDescriptor_monitor_0ed23479230bd9d3) }

var fileDescriptor_monitor_0ed23479230bd9d3 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xbf, 0x4e, 0xf4, 0x30,
	0x10, 0xc4, 0x3f, 0xe7, 0x7f, 0x56, 0xfa, 0x00, 0x2d, 0x08, 0x2c, 0xaa, 0x28, 0x55, 0x0a, 0x94,
	0x02, 0x44, 0x4f, 0x7b, 0x45, 0x1a, 0xf3, 0x00, 0xe8, 0x38, 0x9b, 0x60, 0x9d, 0x92, 0xb5, 0xec,
	0x6d, 0x78, 0x3a, 0x5e, 0x0d, 0xd9, 0xb9, 0x13, 0x74, 0x33, 0x3f, 0x8f, 0x76, 0xbc, 0x0b, 0xff,
	0x17, 0x5a, 0x2d, 0x93, 0x1f, 0x9d, 0x27, 0x26, 0x84, 0x93, 0xdd, 0x3b, 0xdb, 0x7f, 0x0b, 0xc8,
	0x27, 0x13, 0x50, 0x42, 0xbd, 0x84, 0x99, 0xbf, 0x9c, 0x91, 0xa2, 0x13, 0x43, 0xab, 0xce, 0x16,
	0x6f, 0xa1, 0x3a, 0x7c, 0xa6, 0x87, 0xac, 0x13, 0x43, 0xa9, 0x4e, 0x0e, 0xaf, 0x20, 0x0f, 0xfe,
	0x20, 0xf3, 0x4e, 0x0c, 0x85, 0x8a, 0x32, 0x12, 0x1d, 0x58, 0x16, 0x1b, 0xd1, 0x81, 0x11, 0xa1,
	0xd8, 0xfb, 0x39, 0xc8, 0x32, 0x8d, 0x4c, 0x1a, 0xef, 0xa0, 0xfe, 0xf0, 0xb4, 0xbc, 0x59, 0x2d,
	0xab, 0x84, 0xab, 0x68, 0x77, 0x1a, 0xaf, 0xa1, 0x64, 0x8a, 0xb8, 0xde, 0xd2, 0x4c, 0x3b, 0x8d,
	0x17, 0x90, 0x59, 0x2d, 0x9b, 0x34, 0x32, 0xb3, 0x3a, 0x76, 0xf0, 0xcc, 0xb2, 0xdd, 0x3a, 0x78,
	0xe6, 0xfe, 0x01, 0x1a, 0x65, 0x82, 0xa3, 0x35, 0x98, 0x98, 0xa6, 0x63, 0x5a, 0xa0, 0x51, 0x19,
	0x1d, 0x63, 0xda, 0x78, 0x9f, 0x3e, 0xde, 0xaa, 0x28, 0x1f, 0x5f, 0xa0, 0x9e, 0xb6, 0xed, 0xf1,
	0x19, 0xe0, 0xd5, 0xac, 0x5a, 0x19, 0x47, 0x9e, 0xf1, 0x72, 0xfc, 0xbd, 0xca, 0x38, 0x99, 0x70,
	0x7f, 0xf3, 0x17, 0x9c, 0x1b, 0xfa, 0x7f, 0xef, 0x55, 0x3a, 0xe2, 0xd3, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xca, 0xc0, 0xfb, 0xf8, 0x55, 0x01, 0x00, 0x00,
}
