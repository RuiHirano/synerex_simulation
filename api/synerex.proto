syntax = "proto3";

package api;

option go_package="api";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "simulation.proto";

service Synerex {
    rpc RegisterDemand(Demand) returns (Response) {}

    rpc RegisterSupply(Supply) returns (Response) {}

    rpc ProposeDemand(Demand) returns (Response) {}

    rpc ProposeSupply(Supply) returns (Response) {}

    rpc SyncDemand(Demand) returns (Response) {}

    rpc SyncSupply(Supply) returns (Response) {}

    rpc ReserveSupply(Target) returns (ConfirmResponse) {}

    rpc ReserveDemand(Target) returns (ConfirmResponse) {}

    rpc SelectSupply(Target) returns (ConfirmResponse) {}

    rpc SelectDemand(Target) returns (ConfirmResponse) {}

    rpc Confirm(Target) returns (Response){}

    rpc SubscribeDemand(Channel) returns (stream Demand) {}

    rpc SubscribeSupply(Channel) returns (stream Supply) {}

    rpc SubscribeSyncDemand(Channel) returns (stream Demand) {}

    rpc SubscribeSyncSupply(Channel) returns (stream Supply) {}

    rpc SubscribeMbus(Mbus) returns (stream MbusMsg) {}

    rpc SendMsg(MbusMsg) returns (Response){}

    rpc CloseMbus(Mbus) returns (Response){}
}

message Response {
    bool ok = 1;
    string err = 2;
}

message ConfirmResponse{
    bool ok = 1;
    fixed64 mbus_id = 2;
    google.protobuf.Duration wait =3;
    string err = 4;
}

enum ChannelType {
    CLOCK_SERVICE = 0;  // Simulation Clock Service Information
    AGENT_SERVICE = 1; // Simulation Agent Service Information
    PROVIDER_SERVICE = 2; // Simulation Agent Service Information
    END = 3;
}

message Supply{
    fixed64 id = 1;
    fixed64 sender_id = 2;
    fixed64 target_id = 3;// for message id (not for sender_id)
    ChannelType type = 4;
    string supply_name = 5;
    google.protobuf.Timestamp ts = 6;
    //message content = 7; // json
    string arg_json = 7;
    fixed64 mbus_id = 8;   // new mbus id for select demand.
    oneof arg_oneof {
        SimSupply sim_supply = 9;
    }
}

message Demand {
    fixed64 id = 1;
    fixed64 sender_id = 2;
    fixed64 target_id = 3; // if set with message id (not for sender_id) (select for supply)
    ChannelType type = 4;
    string demand_name = 5;
    google.protobuf.Timestamp ts = 6;
    //message content = 7; // json
    string arg_json = 7;
    fixed64 mbus_id = 8;   // new mbus id for select supply...
    oneof arg_oneof {
		SimDemand sim_demand = 9;
    }
}



message Target {
    fixed64 id = 1;
    fixed64 sender_id = 2;
    fixed64 target_id = 3; // for target
    ChannelType type = 4;
    google.protobuf.Duration wait = 5;
    fixed64 mbus_id = 6;    // if you need message bus, set Mbus with mbus_id = 1
}

message Channel {
    fixed64 client_id = 1;
    ChannelType type = 2;
    string arg_json = 3;  // for Channel Argument
    uint64 provider_id = 4;
}

message Mbus {
    fixed64 client_id = 1;
    fixed64 mbus_id = 2;
    string arg_json = 3; // for mbus description
}

message MbusMsg {
    fixed64 msg_id = 1;    // if 0 for close message
    fixed64 sender_id = 2;
    fixed64 target_id = 3; // for target // if 0 for broadcast in mbus
    fixed64 mbus_id = 4;
    uint32 msg_type = 5;  // for message type
    string msg_info = 6;   // for abstract information
    string arg_json = 7;
}
