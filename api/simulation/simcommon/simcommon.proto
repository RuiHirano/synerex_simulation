syntax = "proto3";

package api.participant;

option go_package="github.com/synerex/synerex_alpha/api/simulation/participant";

message Demand {
        // participant info
        DemandType demand_type = 1;

        // meta data
        StatusType status_type = 2;
	    string meta = 3;
        oneof arg_oneof {
            
        }
    }

 message Supply {
        // demand info
        uint64 client_id = 1;

        // demand type
        DemandType demand_type = 2;

        // meta data
        StatusType status_type = 3;
        string meta = 4;
    }

message ParticipantInfo {
    ChannelId channel_id = 1;
    ProviderType provider_type = 2;
    uint32 area_id = 3;
    AgentType agent_type = 4;
}

message ChannelId {
    uint32 participant_channel_id = 1;
    uint32 area_channel_id = 2;
    uint32 agent_channel_id = 3;
    uint32 clock_channel_id = 4;
    uint32 route_channel_id = 5;
}

message ClockInfo {
        uint32 time = 1;
        uint32 cycle_num = 2;
        uint32 cycle_duration = 3;
        uint32 cycle_interval = 4;
}

message AreaInfo {
    uint32 time = 1;
    uint32 area_id = 2;
    string area_name = 3;
    repeated uint32 neighbor_area = 4;
    AreaCoord area_coord = 5;
    AreaCoord control_area_coord = 6;
}

message AreaCoord {
    float start_lat = 1;
    float start_lon = 2;
    float end_lat = 3;
    float end_lon = 4;
}

message RouteInfo {
    repeated Coord transit_point = 1;
    float total_distance = 2;
    float required_time = 3;
}

message AgentInfo {
    uint32 time = 1;
    uint32 agent_id = 2;
    uint32 control_area = 3;
    AgentStatus agent_status = 4;
    AgentType agent_type = 6;
    Route route = 7;
}

enum AgentType {
    PEDESTRIAN = 0;
    CAR = 1;
}

message Coord {
    float lat = 1;
    float lon = 2;
}

enum StatusType {
    OK = 0;
    NG = 1;
    NONE = 2;
}

enum ProviderType {
    SCENARIO = 0;
    AREA = 1;
    CAR_AREA = 2;
    PED_AREA = 3;
    ROUTE = 4;
}


