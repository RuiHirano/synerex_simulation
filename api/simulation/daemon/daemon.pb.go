// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation/daemon/daemon.proto

package daemon

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	agent "github.com/synerex/synerex_alpha/api/simulation/agent"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6adfdc580b8b5d, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type SetAgentsMessage struct {
	Agents               []*agent.Agent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetAgentsMessage) Reset()         { *m = SetAgentsMessage{} }
func (m *SetAgentsMessage) String() string { return proto.CompactTextString(m) }
func (*SetAgentsMessage) ProtoMessage()    {}
func (*SetAgentsMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6adfdc580b8b5d, []int{1}
}

func (m *SetAgentsMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAgentsMessage.Unmarshal(m, b)
}
func (m *SetAgentsMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAgentsMessage.Marshal(b, m, deterministic)
}
func (m *SetAgentsMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAgentsMessage.Merge(m, src)
}
func (m *SetAgentsMessage) XXX_Size() int {
	return xxx_messageInfo_SetAgentsMessage.Size(m)
}
func (m *SetAgentsMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAgentsMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SetAgentsMessage proto.InternalMessageInfo

func (m *SetAgentsMessage) GetAgents() []*agent.Agent {
	if m != nil {
		return m.Agents
	}
	return nil
}

type SetClockMessage struct {
	GlobalTime           float64  `protobuf:"fixed64,1,opt,name=global_time,json=globalTime,proto3" json:"global_time,omitempty"`
	TimeStep             float64  `protobuf:"fixed64,2,opt,name=time_step,json=timeStep,proto3" json:"time_step,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetClockMessage) Reset()         { *m = SetClockMessage{} }
func (m *SetClockMessage) String() string { return proto.CompactTextString(m) }
func (*SetClockMessage) ProtoMessage()    {}
func (*SetClockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6adfdc580b8b5d, []int{2}
}

func (m *SetClockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetClockMessage.Unmarshal(m, b)
}
func (m *SetClockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetClockMessage.Marshal(b, m, deterministic)
}
func (m *SetClockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetClockMessage.Merge(m, src)
}
func (m *SetClockMessage) XXX_Size() int {
	return xxx_messageInfo_SetClockMessage.Size(m)
}
func (m *SetClockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SetClockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SetClockMessage proto.InternalMessageInfo

func (m *SetClockMessage) GetGlobalTime() float64 {
	if m != nil {
		return m.GlobalTime
	}
	return 0
}

func (m *SetClockMessage) GetTimeStep() float64 {
	if m != nil {
		return m.TimeStep
	}
	return 0
}

type StartClockMessage struct {
	StepNum              uint64   `protobuf:"varint,1,opt,name=step_num,json=stepNum,proto3" json:"step_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartClockMessage) Reset()         { *m = StartClockMessage{} }
func (m *StartClockMessage) String() string { return proto.CompactTextString(m) }
func (*StartClockMessage) ProtoMessage()    {}
func (*StartClockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6adfdc580b8b5d, []int{3}
}

func (m *StartClockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartClockMessage.Unmarshal(m, b)
}
func (m *StartClockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartClockMessage.Marshal(b, m, deterministic)
}
func (m *StartClockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartClockMessage.Merge(m, src)
}
func (m *StartClockMessage) XXX_Size() int {
	return xxx_messageInfo_StartClockMessage.Size(m)
}
func (m *StartClockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StartClockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StartClockMessage proto.InternalMessageInfo

func (m *StartClockMessage) GetStepNum() uint64 {
	if m != nil {
		return m.StepNum
	}
	return 0
}

type StopClockMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopClockMessage) Reset()         { *m = StopClockMessage{} }
func (m *StopClockMessage) String() string { return proto.CompactTextString(m) }
func (*StopClockMessage) ProtoMessage()    {}
func (*StopClockMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6adfdc580b8b5d, []int{4}
}

func (m *StopClockMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopClockMessage.Unmarshal(m, b)
}
func (m *StopClockMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopClockMessage.Marshal(b, m, deterministic)
}
func (m *StopClockMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopClockMessage.Merge(m, src)
}
func (m *StopClockMessage) XXX_Size() int {
	return xxx_messageInfo_StopClockMessage.Size(m)
}
func (m *StopClockMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StopClockMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StopClockMessage proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Response)(nil), "api.daemon.Response")
	proto.RegisterType((*SetAgentsMessage)(nil), "api.daemon.SetAgentsMessage")
	proto.RegisterType((*SetClockMessage)(nil), "api.daemon.SetClockMessage")
	proto.RegisterType((*StartClockMessage)(nil), "api.daemon.StartClockMessage")
	proto.RegisterType((*StopClockMessage)(nil), "api.daemon.StopClockMessage")
}

func init() { proto.RegisterFile("simulation/daemon/daemon.proto", fileDescriptor_cf6adfdc580b8b5d) }

var fileDescriptor_cf6adfdc580b8b5d = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x4f, 0xc2, 0x40,
	0x10, 0xc5, 0x6d, 0x31, 0x58, 0x86, 0x08, 0x75, 0xe3, 0x01, 0x01, 0x95, 0xf4, 0xd4, 0x83, 0xa9,
	0x09, 0x5e, 0xbd, 0xa8, 0xc4, 0x78, 0x51, 0x92, 0xad, 0x27, 0x2f, 0x64, 0x91, 0x09, 0x69, 0xe8,
	0x76, 0x9b, 0xdd, 0xe5, 0x53, 0xf9, 0x25, 0xcd, 0xee, 0x5a, 0x28, 0x8d, 0x5c, 0xfa, 0x67, 0xe6,
	0xed, 0x6f, 0xe6, 0xbd, 0x2c, 0xdc, 0xa8, 0x8c, 0x6f, 0x73, 0xa6, 0x33, 0x51, 0xdc, 0xaf, 0x18,
	0xf2, 0xdd, 0x2b, 0x29, 0xa5, 0xd0, 0x82, 0x00, 0x2b, 0xb3, 0xc4, 0x55, 0x86, 0xe3, 0x9a, 0x96,
	0xad, 0xb1, 0xd0, 0xee, 0xe9, 0x94, 0xd1, 0x1d, 0x04, 0x14, 0x55, 0x29, 0x0a, 0x85, 0xa4, 0x07,
	0xbe, 0xd8, 0x0c, 0xbc, 0x89, 0x17, 0x07, 0xd4, 0x17, 0x1b, 0x12, 0x42, 0x0b, 0xa5, 0x1c, 0xf8,
	0x13, 0x2f, 0xee, 0x50, 0xf3, 0x19, 0x3d, 0x42, 0x98, 0xa2, 0x7e, 0x32, 0xe7, 0xd5, 0x3b, 0x2a,
	0xc5, 0xd6, 0x48, 0x62, 0x68, 0x5b, 0xa0, 0x1a, 0x78, 0x93, 0x56, 0xdc, 0x9d, 0x86, 0x89, 0x19,
	0xee, 0x66, 0x58, 0x25, 0xfd, 0xeb, 0x47, 0x73, 0xe8, 0xa7, 0xa8, 0x5f, 0x72, 0xf1, 0xbd, 0xa9,
	0x0e, 0xdf, 0x42, 0x77, 0x9d, 0x8b, 0x25, 0xcb, 0x17, 0x3a, 0xe3, 0x68, 0x67, 0x7b, 0x14, 0x5c,
	0xe9, 0x33, 0xe3, 0x48, 0x46, 0xd0, 0x31, 0x9d, 0x85, 0xd2, 0x58, 0xda, 0x4d, 0x3c, 0x1a, 0x98,
	0x42, 0xaa, 0xb1, 0x8c, 0x12, 0xb8, 0x48, 0x35, 0x93, 0x87, 0xc8, 0x2b, 0x08, 0x8c, 0x78, 0x51,
	0x6c, 0xb9, 0xe5, 0x9d, 0xd2, 0x33, 0xf3, 0xff, 0xb1, 0xe5, 0x11, 0x81, 0x30, 0xd5, 0xa2, 0xac,
	0xcb, 0xa7, 0x3f, 0x3e, 0x74, 0xd2, 0x8c, 0xcf, 0x6c, 0x58, 0xe4, 0x15, 0x7a, 0x3b, 0x83, 0x73,
	0xb9, 0x42, 0x49, 0xc6, 0xc9, 0x3e, 0xcb, 0xa4, 0x69, 0x7e, 0x78, 0x59, 0xef, 0x56, 0x41, 0x46,
	0x27, 0x64, 0x06, 0xe7, 0x95, 0x55, 0x87, 0x19, 0x35, 0x30, 0xf5, 0x1d, 0x8e, 0x52, 0xde, 0xa0,
	0xbf, 0xf7, 0xe7, 0x38, 0xd7, 0x07, 0x9c, 0xa6, 0xf9, 0xa3, 0x24, 0xe3, 0xab, 0x72, 0xfe, 0x9f,
	0xaf, 0x46, 0x2a, 0xc7, 0x38, 0xcf, 0xc1, 0x57, 0xdb, 0x15, 0x97, 0x6d, 0x7b, 0x7f, 0x1e, 0x7e,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xe4, 0xde, 0x8b, 0x8b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SimDaemonClient is the client API for SimDaemon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SimDaemonClient interface {
	SetAgentsOrder(ctx context.Context, in *SetAgentsMessage, opts ...grpc.CallOption) (*Response, error)
	SetClockOrder(ctx context.Context, in *SetClockMessage, opts ...grpc.CallOption) (*Response, error)
	StartClockOrder(ctx context.Context, in *StartClockMessage, opts ...grpc.CallOption) (*Response, error)
	StopClockOrder(ctx context.Context, in *StopClockMessage, opts ...grpc.CallOption) (*Response, error)
}

type simDaemonClient struct {
	cc *grpc.ClientConn
}

func NewSimDaemonClient(cc *grpc.ClientConn) SimDaemonClient {
	return &simDaemonClient{cc}
}

func (c *simDaemonClient) SetAgentsOrder(ctx context.Context, in *SetAgentsMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.daemon.SimDaemon/SetAgentsOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simDaemonClient) SetClockOrder(ctx context.Context, in *SetClockMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.daemon.SimDaemon/SetClockOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simDaemonClient) StartClockOrder(ctx context.Context, in *StartClockMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.daemon.SimDaemon/StartClockOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *simDaemonClient) StopClockOrder(ctx context.Context, in *StopClockMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.daemon.SimDaemon/StopClockOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimDaemonServer is the server API for SimDaemon service.
type SimDaemonServer interface {
	SetAgentsOrder(context.Context, *SetAgentsMessage) (*Response, error)
	SetClockOrder(context.Context, *SetClockMessage) (*Response, error)
	StartClockOrder(context.Context, *StartClockMessage) (*Response, error)
	StopClockOrder(context.Context, *StopClockMessage) (*Response, error)
}

// UnimplementedSimDaemonServer can be embedded to have forward compatible implementations.
type UnimplementedSimDaemonServer struct {
}

func (*UnimplementedSimDaemonServer) SetAgentsOrder(ctx context.Context, req *SetAgentsMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAgentsOrder not implemented")
}
func (*UnimplementedSimDaemonServer) SetClockOrder(ctx context.Context, req *SetClockMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetClockOrder not implemented")
}
func (*UnimplementedSimDaemonServer) StartClockOrder(ctx context.Context, req *StartClockMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartClockOrder not implemented")
}
func (*UnimplementedSimDaemonServer) StopClockOrder(ctx context.Context, req *StopClockMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopClockOrder not implemented")
}

func RegisterSimDaemonServer(s *grpc.Server, srv SimDaemonServer) {
	s.RegisterService(&_SimDaemon_serviceDesc, srv)
}

func _SimDaemon_SetAgentsOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAgentsMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimDaemonServer).SetAgentsOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.daemon.SimDaemon/SetAgentsOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimDaemonServer).SetAgentsOrder(ctx, req.(*SetAgentsMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimDaemon_SetClockOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetClockMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimDaemonServer).SetClockOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.daemon.SimDaemon/SetClockOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimDaemonServer).SetClockOrder(ctx, req.(*SetClockMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimDaemon_StartClockOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartClockMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimDaemonServer).StartClockOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.daemon.SimDaemon/StartClockOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimDaemonServer).StartClockOrder(ctx, req.(*StartClockMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _SimDaemon_StopClockOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopClockMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimDaemonServer).StopClockOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.daemon.SimDaemon/StopClockOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimDaemonServer).StopClockOrder(ctx, req.(*StopClockMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimDaemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.daemon.SimDaemon",
	HandlerType: (*SimDaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetAgentsOrder",
			Handler:    _SimDaemon_SetAgentsOrder_Handler,
		},
		{
			MethodName: "SetClockOrder",
			Handler:    _SimDaemon_SetClockOrder_Handler,
		},
		{
			MethodName: "StartClockOrder",
			Handler:    _SimDaemon_StartClockOrder_Handler,
		},
		{
			MethodName: "StopClockOrder",
			Handler:    _SimDaemon_StopClockOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "simulation/daemon/daemon.proto",
}
