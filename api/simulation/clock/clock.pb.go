// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation/clock/clock.proto

package clock

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClockType int32

const (
	ClockType_FORWARD ClockType = 0
	ClockType_BACK    ClockType = 1
	ClockType_SET     ClockType = 2
)

var ClockType_name = map[int32]string{
	0: "FORWARD",
	1: "BACK",
	2: "SET",
}

var ClockType_value = map[string]int32{
	"FORWARD": 0,
	"BACK":    1,
	"SET":     2,
}

func (x ClockType) String() string {
	return proto.EnumName(ClockType_name, int32(x))
}

func (ClockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{0}
}

type StatusType int32

const (
	StatusType_OK StatusType = 0
	StatusType_NG StatusType = 1
)

var StatusType_name = map[int32]string{
	0: "OK",
	1: "NG",
}

var StatusType_value = map[string]int32{
	"OK": 0,
	"NG": 1,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}

func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{1}
}

type MessageType int32

const (
	MessageType_SET_CLOCK    MessageType = 0
	MessageType_CLOCK_INFO   MessageType = 1
	MessageType_CLOCK_STATUS MessageType = 2
)

var MessageType_name = map[int32]string{
	0: "SET_CLOCK",
	1: "CLOCK_INFO",
	2: "CLOCK_STATUS",
}

var MessageType_value = map[string]int32{
	"SET_CLOCK":    0,
	"CLOCK_INFO":   1,
	"CLOCK_STATUS": 2,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{2}
}

type ClockService struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=api.clock.MessageType" json:"message_type,omitempty"`
	Time                 uint32      `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	ClockType            ClockType   `protobuf:"varint,3,opt,name=clock_type,json=clockType,proto3,enum=api.clock.ClockType" json:"clock_type,omitempty"`
	NumCycle             uint32      `protobuf:"varint,4,opt,name=num_cycle,json=numCycle,proto3" json:"num_cycle,omitempty"`
	StatusType           StatusType  `protobuf:"varint,5,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClockService) Reset()         { *m = ClockService{} }
func (m *ClockService) String() string { return proto.CompactTextString(m) }
func (*ClockService) ProtoMessage()    {}
func (*ClockService) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{0}
}

func (m *ClockService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockService.Unmarshal(m, b)
}
func (m *ClockService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockService.Marshal(b, m, deterministic)
}
func (m *ClockService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockService.Merge(m, src)
}
func (m *ClockService) XXX_Size() int {
	return xxx_messageInfo_ClockService.Size(m)
}
func (m *ClockService) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockService.DiscardUnknown(m)
}

var xxx_messageInfo_ClockService proto.InternalMessageInfo

func (m *ClockService) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_SET_CLOCK
}

func (m *ClockService) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ClockService) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func (m *ClockService) GetNumCycle() uint32 {
	if m != nil {
		return m.NumCycle
	}
	return 0
}

func (m *ClockService) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

type ClockInfo struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=api.clock.MessageType" json:"message_type,omitempty"`
	Time                 uint32      `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	ClockType            ClockType   `protobuf:"varint,3,opt,name=clock_type,json=clockType,proto3,enum=api.clock.ClockType" json:"clock_type,omitempty"`
	NumCycle             uint32      `protobuf:"varint,4,opt,name=num_cycle,json=numCycle,proto3" json:"num_cycle,omitempty"`
	StatusType           StatusType  `protobuf:"varint,5,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClockInfo) Reset()         { *m = ClockInfo{} }
func (m *ClockInfo) String() string { return proto.CompactTextString(m) }
func (*ClockInfo) ProtoMessage()    {}
func (*ClockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{1}
}

func (m *ClockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockInfo.Unmarshal(m, b)
}
func (m *ClockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockInfo.Marshal(b, m, deterministic)
}
func (m *ClockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockInfo.Merge(m, src)
}
func (m *ClockInfo) XXX_Size() int {
	return xxx_messageInfo_ClockInfo.Size(m)
}
func (m *ClockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClockInfo proto.InternalMessageInfo

func (m *ClockInfo) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_SET_CLOCK
}

func (m *ClockInfo) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ClockInfo) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func (m *ClockInfo) GetNumCycle() uint32 {
	if m != nil {
		return m.NumCycle
	}
	return 0
}

func (m *ClockInfo) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

type SetClock struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=api.clock.MessageType" json:"message_type,omitempty"`
	Time                 uint32      `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	ClockType            ClockType   `protobuf:"varint,3,opt,name=clock_type,json=clockType,proto3,enum=api.clock.ClockType" json:"clock_type,omitempty"`
	NumCycle             uint32      `protobuf:"varint,4,opt,name=num_cycle,json=numCycle,proto3" json:"num_cycle,omitempty"`
	CycleDuration        uint32      `protobuf:"varint,5,opt,name=cycle_duration,json=cycleDuration,proto3" json:"cycle_duration,omitempty"`
	CycleTime            uint32      `protobuf:"varint,6,opt,name=cycle_time,json=cycleTime,proto3" json:"cycle_time,omitempty"`
	StatusType           StatusType  `protobuf:"varint,7,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetClock) Reset()         { *m = SetClock{} }
func (m *SetClock) String() string { return proto.CompactTextString(m) }
func (*SetClock) ProtoMessage()    {}
func (*SetClock) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{2}
}

func (m *SetClock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetClock.Unmarshal(m, b)
}
func (m *SetClock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetClock.Marshal(b, m, deterministic)
}
func (m *SetClock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetClock.Merge(m, src)
}
func (m *SetClock) XXX_Size() int {
	return xxx_messageInfo_SetClock.Size(m)
}
func (m *SetClock) XXX_DiscardUnknown() {
	xxx_messageInfo_SetClock.DiscardUnknown(m)
}

var xxx_messageInfo_SetClock proto.InternalMessageInfo

func (m *SetClock) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_SET_CLOCK
}

func (m *SetClock) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *SetClock) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func (m *SetClock) GetNumCycle() uint32 {
	if m != nil {
		return m.NumCycle
	}
	return 0
}

func (m *SetClock) GetCycleDuration() uint32 {
	if m != nil {
		return m.CycleDuration
	}
	return 0
}

func (m *SetClock) GetCycleTime() uint32 {
	if m != nil {
		return m.CycleTime
	}
	return 0
}

func (m *SetClock) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

type ClockStatus struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=api.clock.MessageType" json:"message_type,omitempty"`
	Time                 uint32      `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	StatusType           StatusType  `protobuf:"varint,3,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	Meta                 string      `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	ClockType            ClockType   `protobuf:"varint,5,opt,name=clockType,proto3,enum=api.clock.ClockType" json:"clockType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClockStatus) Reset()         { *m = ClockStatus{} }
func (m *ClockStatus) String() string { return proto.CompactTextString(m) }
func (*ClockStatus) ProtoMessage()    {}
func (*ClockStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{3}
}

func (m *ClockStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockStatus.Unmarshal(m, b)
}
func (m *ClockStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockStatus.Marshal(b, m, deterministic)
}
func (m *ClockStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockStatus.Merge(m, src)
}
func (m *ClockStatus) XXX_Size() int {
	return xxx_messageInfo_ClockStatus.Size(m)
}
func (m *ClockStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ClockStatus proto.InternalMessageInfo

func (m *ClockStatus) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_SET_CLOCK
}

func (m *ClockStatus) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ClockStatus) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

func (m *ClockStatus) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

func (m *ClockStatus) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func init() {
	proto.RegisterEnum("api.clock.ClockType", ClockType_name, ClockType_value)
	proto.RegisterEnum("api.clock.StatusType", StatusType_name, StatusType_value)
	proto.RegisterEnum("api.clock.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*ClockService)(nil), "api.clock.ClockService")
	proto.RegisterType((*ClockInfo)(nil), "api.clock.ClockInfo")
	proto.RegisterType((*SetClock)(nil), "api.clock.SetClock")
	proto.RegisterType((*ClockStatus)(nil), "api.clock.ClockStatus")
}

func init() { proto.RegisterFile("simulation/clock/clock.proto", fileDescriptor_e96fed1976809896) }

var fileDescriptor_e96fed1976809896 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x54, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xde, 0x49, 0x6b, 0xdb, 0x9c, 0x34, 0x65, 0x18, 0x54, 0x0a, 0xae, 0xb0, 0x2c, 0x08, 0x4b,
	0x85, 0x04, 0x76, 0x51, 0xf1, 0x46, 0xe8, 0x66, 0x77, 0x65, 0x59, 0x6d, 0x20, 0x89, 0x08, 0xde,
	0x84, 0x69, 0x1c, 0xdb, 0x60, 0x26, 0x09, 0xc9, 0x44, 0xcc, 0x23, 0xf9, 0x4e, 0x5e, 0x0a, 0xbe,
	0x86, 0xe4, 0xa4, 0x7f, 0xf4, 0xc6, 0x5e, 0x78, 0x21, 0x7b, 0x33, 0xf3, 0x9d, 0x9f, 0xf9, 0xce,
	0x39, 0x1f, 0x87, 0x81, 0xe3, 0x32, 0x96, 0x55, 0xc2, 0x55, 0x9c, 0xa5, 0x76, 0x94, 0x64, 0xd1,
	0xd7, 0xf6, 0xb4, 0xf2, 0x22, 0x53, 0x19, 0xd3, 0x79, 0x1e, 0x5b, 0xe8, 0x38, 0xfd, 0x4d, 0x60,
	0xe8, 0x34, 0xc8, 0x17, 0xc5, 0xb7, 0x38, 0x12, 0xec, 0x35, 0x0c, 0xa5, 0x28, 0x4b, 0xbe, 0x10,
	0xa1, 0xaa, 0x73, 0x31, 0x26, 0x27, 0xe4, 0x6c, 0x74, 0xfe, 0xd8, 0xda, 0x3c, 0xb1, 0xde, 0xb7,
	0xe1, 0xa0, 0xce, 0x85, 0x67, 0xc8, 0xad, 0xc1, 0x18, 0x74, 0x55, 0x2c, 0xc5, 0x58, 0x3b, 0x21,
	0x67, 0xa6, 0x87, 0x98, 0x5d, 0x00, 0xe0, 0xab, 0x96, 0xac, 0x83, 0x64, 0x0f, 0x77, 0xc8, 0xb0,
	0x36, 0x52, 0xe9, 0xd1, 0x1a, 0xb2, 0x27, 0xa0, 0xa7, 0x95, 0x0c, 0xa3, 0x3a, 0x4a, 0xc4, 0xb8,
	0x8b, 0x6c, 0x83, 0xb4, 0x92, 0x4e, 0x63, 0xb3, 0x97, 0x60, 0x94, 0x8a, 0xab, 0xaa, 0x6c, 0x29,
	0x1f, 0x20, 0xe5, 0xa3, 0x1d, 0x4a, 0x1f, 0xa3, 0xc8, 0x09, 0xe5, 0x06, 0x9f, 0xfe, 0x22, 0xa0,
	0x63, 0xb5, 0xdb, 0xf4, 0x4b, 0x76, 0x7f, 0xc7, 0xfc, 0xa1, 0xc1, 0xc0, 0x17, 0x0a, 0x0b, 0xfe,
	0xff, 0x53, 0x3e, 0x83, 0x11, 0x06, 0xc2, 0xcf, 0x55, 0x81, 0xdb, 0x8a, 0x83, 0x9a, 0x9e, 0x89,
	0xde, 0xab, 0x95, 0x93, 0x3d, 0x05, 0x68, 0xd3, 0xb0, 0xa5, 0x1e, 0xa6, 0xe8, 0xe8, 0x09, 0x9a,
	0xbe, 0xf6, 0xb4, 0xea, 0x1f, 0xaa, 0xd5, 0x4f, 0x02, 0x46, 0xbb, 0xfc, 0xe8, 0xfb, 0xd7, 0x72,
	0xed, 0xb5, 0xd5, 0x39, 0xb0, 0xad, 0x86, 0x4b, 0x0a, 0xc5, 0x51, 0x2c, 0xdd, 0x43, 0xcc, 0xce,
	0x61, 0x2b, 0xe9, 0x6a, 0x19, 0xfe, 0xa6, 0xfc, 0xe4, 0xf9, 0x6a, 0xe1, 0x91, 0xd4, 0x80, 0xfe,
	0x8d, 0xeb, 0x7d, 0x9c, 0x7a, 0x57, 0xf4, 0x88, 0x0d, 0xa0, 0x7b, 0x39, 0x75, 0xee, 0x28, 0x61,
	0x7d, 0xe8, 0xf8, 0xd7, 0x01, 0xd5, 0x26, 0xc7, 0x00, 0xdb, 0x76, 0x58, 0x0f, 0x34, 0xf7, 0x8e,
	0x1e, 0x35, 0xf7, 0xec, 0x2d, 0x25, 0x93, 0x37, 0x60, 0xec, 0x8c, 0xce, 0x4c, 0xd0, 0xfd, 0xeb,
	0x20, 0x74, 0xde, 0xb9, 0x4e, 0x93, 0x35, 0x02, 0x40, 0x18, 0xde, 0xce, 0x6e, 0x5c, 0x4a, 0x18,
	0x85, 0x61, 0x6b, 0xfb, 0xc1, 0x34, 0xf8, 0xe0, 0x53, 0xed, 0xf2, 0xd5, 0xa7, 0x17, 0x8b, 0x58,
	0x2d, 0xab, 0xb9, 0x15, 0x65, 0xd2, 0x2e, 0xeb, 0x54, 0x14, 0xe2, 0xfb, 0xfa, 0x0e, 0x79, 0x92,
	0x2f, 0xb9, 0xcd, 0xf3, 0xd8, 0xde, 0xff, 0xb6, 0xe6, 0x3d, 0xfc, 0xb1, 0x2e, 0xfe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x7f, 0x67, 0xe0, 0x45, 0xd1, 0x04, 0x00, 0x00,
}
