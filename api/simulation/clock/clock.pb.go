// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation/clock/clock.proto

package clock

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusType int32

const (
	StatusType_OK StatusType = 0
	StatusType_NG StatusType = 1
)

var StatusType_name = map[int32]string{
	0: "OK",
	1: "NG",
}

var StatusType_value = map[string]int32{
	"OK": 0,
	"NG": 1,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}

func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{0}
}

type ClockType int32

const (
	ClockType_FORWARD ClockType = 0
	ClockType_BACK    ClockType = 1
	ClockType_SET     ClockType = 2
	ClockType_START   ClockType = 3
	ClockType_STOP    ClockType = 4
)

var ClockType_name = map[int32]string{
	0: "FORWARD",
	1: "BACK",
	2: "SET",
	3: "START",
	4: "STOP",
}

var ClockType_value = map[string]int32{
	"FORWARD": 0,
	"BACK":    1,
	"SET":     2,
	"START":   3,
	"STOP":    4,
}

func (x ClockType) String() string {
	return proto.EnumName(ClockType_name, int32(x))
}

func (ClockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{1}
}

type ClockService struct {
	// Types that are valid to be assigned to ClockServiceAction:
	//	*ClockService_ClockInfo_
	//	*ClockService_ClockRequest_
	ClockServiceAction   isClockService_ClockServiceAction `protobuf_oneof:"ClockServiceAction"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ClockService) Reset()         { *m = ClockService{} }
func (m *ClockService) String() string { return proto.CompactTextString(m) }
func (*ClockService) ProtoMessage()    {}
func (*ClockService) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{0}
}

func (m *ClockService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockService.Unmarshal(m, b)
}
func (m *ClockService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockService.Marshal(b, m, deterministic)
}
func (m *ClockService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockService.Merge(m, src)
}
func (m *ClockService) XXX_Size() int {
	return xxx_messageInfo_ClockService.Size(m)
}
func (m *ClockService) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockService.DiscardUnknown(m)
}

var xxx_messageInfo_ClockService proto.InternalMessageInfo

type isClockService_ClockServiceAction interface {
	isClockService_ClockServiceAction()
}

type ClockService_ClockInfo_ struct {
	ClockInfo *ClockService_ClockInfo `protobuf:"bytes,1,opt,name=clock_info,json=clockInfo,proto3,oneof"`
}

type ClockService_ClockRequest_ struct {
	ClockRequest *ClockService_ClockRequest `protobuf:"bytes,2,opt,name=clock_request,json=clockRequest,proto3,oneof"`
}

func (*ClockService_ClockInfo_) isClockService_ClockServiceAction() {}

func (*ClockService_ClockRequest_) isClockService_ClockServiceAction() {}

func (m *ClockService) GetClockServiceAction() isClockService_ClockServiceAction {
	if m != nil {
		return m.ClockServiceAction
	}
	return nil
}

func (m *ClockService) GetClockInfo() *ClockService_ClockInfo {
	if x, ok := m.GetClockServiceAction().(*ClockService_ClockInfo_); ok {
		return x.ClockInfo
	}
	return nil
}

func (m *ClockService) GetClockRequest() *ClockService_ClockRequest {
	if x, ok := m.GetClockServiceAction().(*ClockService_ClockRequest_); ok {
		return x.ClockRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClockService) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClockService_ClockInfo_)(nil),
		(*ClockService_ClockRequest_)(nil),
	}
}

type ClockService_ClockInfo struct {
	Time                 uint32     `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	ClockType            ClockType  `protobuf:"varint,2,opt,name=clock_type,json=clockType,proto3,enum=api.clock.ClockType" json:"clock_type,omitempty"`
	StatusType           StatusType `protobuf:"varint,3,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	Meta                 string     `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClockService_ClockInfo) Reset()         { *m = ClockService_ClockInfo{} }
func (m *ClockService_ClockInfo) String() string { return proto.CompactTextString(m) }
func (*ClockService_ClockInfo) ProtoMessage()    {}
func (*ClockService_ClockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{0, 0}
}

func (m *ClockService_ClockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockService_ClockInfo.Unmarshal(m, b)
}
func (m *ClockService_ClockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockService_ClockInfo.Marshal(b, m, deterministic)
}
func (m *ClockService_ClockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockService_ClockInfo.Merge(m, src)
}
func (m *ClockService_ClockInfo) XXX_Size() int {
	return xxx_messageInfo_ClockService_ClockInfo.Size(m)
}
func (m *ClockService_ClockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockService_ClockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClockService_ClockInfo proto.InternalMessageInfo

func (m *ClockService_ClockInfo) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ClockService_ClockInfo) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func (m *ClockService_ClockInfo) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

func (m *ClockService_ClockInfo) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

type ClockService_ClockRequest struct {
	Time                 uint32     `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	ClockType            ClockType  `protobuf:"varint,2,opt,name=clock_type,json=clockType,proto3,enum=api.clock.ClockType" json:"clock_type,omitempty"`
	NumCycle             uint32     `protobuf:"varint,3,opt,name=num_cycle,json=numCycle,proto3" json:"num_cycle,omitempty"`
	CycleDuration        uint32     `protobuf:"varint,4,opt,name=cycle_duration,json=cycleDuration,proto3" json:"cycle_duration,omitempty"`
	CycleTime            uint32     `protobuf:"varint,5,opt,name=cycle_time,json=cycleTime,proto3" json:"cycle_time,omitempty"`
	StatusType           StatusType `protobuf:"varint,6,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClockService_ClockRequest) Reset()         { *m = ClockService_ClockRequest{} }
func (m *ClockService_ClockRequest) String() string { return proto.CompactTextString(m) }
func (*ClockService_ClockRequest) ProtoMessage()    {}
func (*ClockService_ClockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e96fed1976809896, []int{0, 1}
}

func (m *ClockService_ClockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockService_ClockRequest.Unmarshal(m, b)
}
func (m *ClockService_ClockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockService_ClockRequest.Marshal(b, m, deterministic)
}
func (m *ClockService_ClockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockService_ClockRequest.Merge(m, src)
}
func (m *ClockService_ClockRequest) XXX_Size() int {
	return xxx_messageInfo_ClockService_ClockRequest.Size(m)
}
func (m *ClockService_ClockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockService_ClockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClockService_ClockRequest proto.InternalMessageInfo

func (m *ClockService_ClockRequest) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ClockService_ClockRequest) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func (m *ClockService_ClockRequest) GetNumCycle() uint32 {
	if m != nil {
		return m.NumCycle
	}
	return 0
}

func (m *ClockService_ClockRequest) GetCycleDuration() uint32 {
	if m != nil {
		return m.CycleDuration
	}
	return 0
}

func (m *ClockService_ClockRequest) GetCycleTime() uint32 {
	if m != nil {
		return m.CycleTime
	}
	return 0
}

func (m *ClockService_ClockRequest) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_OK
}

func init() {
	proto.RegisterEnum("api.clock.StatusType", StatusType_name, StatusType_value)
	proto.RegisterEnum("api.clock.ClockType", ClockType_name, ClockType_value)
	proto.RegisterType((*ClockService)(nil), "api.clock.ClockService")
	proto.RegisterType((*ClockService_ClockInfo)(nil), "api.clock.ClockService.ClockInfo")
	proto.RegisterType((*ClockService_ClockRequest)(nil), "api.clock.ClockService.ClockRequest")
}

func init() { proto.RegisterFile("simulation/clock/clock.proto", fileDescriptor_e96fed1976809896) }

var fileDescriptor_e96fed1976809896 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xc7, 0x93, 0x36, 0xdb, 0xdd, 0x9c, 0x6e, 0x96, 0x30, 0xac, 0x50, 0xd6, 0x15, 0x56, 0x51,
	0x58, 0xf6, 0x22, 0x81, 0x16, 0xf5, 0xd6, 0xa4, 0x55, 0x2b, 0x05, 0x2b, 0x93, 0x80, 0xe0, 0x4d,
	0x48, 0xc7, 0xa9, 0x1d, 0xcc, 0x97, 0xc9, 0x44, 0xcc, 0xdb, 0xf8, 0x42, 0xbe, 0x8c, 0x4f, 0x20,
	0x73, 0x92, 0xd6, 0xd0, 0x0b, 0xf1, 0x62, 0x6f, 0x92, 0xf3, 0xf5, 0x3f, 0xe7, 0xc7, 0x39, 0x03,
	0xd7, 0x95, 0x48, 0xeb, 0x24, 0x96, 0x22, 0xcf, 0x5c, 0x96, 0xe4, 0xec, 0x6b, 0xfb, 0x75, 0x8a,
	0x32, 0x97, 0x39, 0x31, 0xe3, 0x42, 0x38, 0x18, 0x78, 0xf2, 0xcb, 0x80, 0xf3, 0xb9, 0xb2, 0x02,
	0x5e, 0x7e, 0x17, 0x8c, 0x13, 0x1f, 0x00, 0x33, 0x91, 0xc8, 0xb6, 0xf9, 0x44, 0xbf, 0xd1, 0x6f,
	0xc7, 0xd3, 0xc7, 0xce, 0x41, 0xe0, 0xf4, 0x8b, 0x5b, 0xe7, 0x5d, 0xb6, 0xcd, 0x97, 0x1a, 0x35,
	0xd9, 0xde, 0x21, 0x2b, 0xb0, 0xda, 0x1e, 0x25, 0xff, 0x56, 0xf3, 0x4a, 0x4e, 0x06, 0xd8, 0xe6,
	0xe9, 0x3f, 0xdb, 0xd0, 0xb6, 0x76, 0xa9, 0xd1, 0x73, 0xd6, 0xf3, 0xaf, 0x7e, 0xea, 0x60, 0x1e,
	0xe6, 0x10, 0x02, 0x86, 0x14, 0x29, 0x47, 0x30, 0x8b, 0xa2, 0x4d, 0x66, 0x7b, 0x64, 0xd9, 0x14,
	0x1c, 0x67, 0x5d, 0x4c, 0x2f, 0x8f, 0x67, 0x85, 0x4d, 0xc1, 0x3b, 0x46, 0x65, 0x92, 0x17, 0x30,
	0xae, 0x64, 0x2c, 0xeb, 0xaa, 0x55, 0x0d, 0x51, 0xf5, 0xa0, 0xa7, 0x0a, 0x30, 0x8b, 0x32, 0xa8,
	0x0e, 0xb6, 0x02, 0x48, 0xb9, 0x8c, 0x27, 0xc6, 0x8d, 0x7e, 0x6b, 0x52, 0xb4, 0xaf, 0x7e, 0xeb,
	0xdd, 0x12, 0x3b, 0xe6, 0xfb, 0xa3, 0x7c, 0x08, 0x66, 0x56, 0xa7, 0x11, 0x6b, 0x58, 0xd2, 0x32,
	0x5a, 0xf4, 0x2c, 0xab, 0xd3, 0xb9, 0xf2, 0xc9, 0x33, 0xb8, 0xc0, 0x44, 0xf4, 0xb9, 0x2e, 0xf1,
	0xd4, 0x08, 0x65, 0x51, 0x0b, 0xa3, 0x8b, 0x2e, 0x48, 0x1e, 0x01, 0xb4, 0x65, 0x88, 0x74, 0x82,
	0x25, 0x26, 0x46, 0x42, 0xc5, 0x75, 0xb4, 0x88, 0xd1, 0x7f, 0x2e, 0xc2, 0xbf, 0x04, 0xd2, 0x3f,
	0xa2, 0xc7, 0xd4, 0xb0, 0xbb, 0x6b, 0x80, 0xbf, 0xf5, 0x64, 0x04, 0x83, 0xf5, 0xca, 0xd6, 0xd4,
	0xff, 0xfd, 0x5b, 0x5b, 0xbf, 0x7b, 0xd5, 0x9d, 0x12, 0x93, 0x63, 0x38, 0x7d, 0xb3, 0xa6, 0x1f,
	0x3d, 0xba, 0xb0, 0x35, 0x72, 0x06, 0x86, 0xef, 0xcd, 0x57, 0xb6, 0x4e, 0x4e, 0x61, 0x18, 0xbc,
	0x0e, 0xed, 0x01, 0x31, 0xe1, 0x24, 0x08, 0x3d, 0x1a, 0xda, 0x43, 0x95, 0x0d, 0xc2, 0xf5, 0x07,
	0xdb, 0xf0, 0x5f, 0x7e, 0x7a, 0xfe, 0x45, 0xc8, 0x5d, 0xbd, 0x71, 0x58, 0x9e, 0xba, 0x55, 0x93,
	0xf1, 0x92, 0xff, 0xd8, 0xff, 0xa3, 0x38, 0x29, 0x76, 0xb1, 0x1b, 0x17, 0xc2, 0x3d, 0x7e, 0xff,
	0x9b, 0x11, 0x3e, 0xfd, 0xd9, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x19, 0x8d, 0x6e, 0x5f, 0x1a,
	0x03, 0x00, 0x00,
}
