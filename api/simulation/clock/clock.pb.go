// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation/clock/clock.proto

package clock // import "github.com/synerex/synerex_alpha/api/simulation/clock"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClockType int32

const (
	ClockType_FORWARD ClockType = 0
	ClockType_BACK    ClockType = 1
	ClockType_SET     ClockType = 2
)

var ClockType_name = map[int32]string{
	0: "FORWARD",
	1: "BACK",
	2: "SET",
}
var ClockType_value = map[string]int32{
	"FORWARD": 0,
	"BACK":    1,
	"SET":     2,
}

func (x ClockType) String() string {
	return proto.EnumName(ClockType_name, int32(x))
}
func (ClockType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clock_4cab62f4d5c069d3, []int{0}
}

type StatusType int32

const (
	StatusType_WILL StatusType = 0
	StatusType_DONE StatusType = 1
)

var StatusType_name = map[int32]string{
	0: "WILL",
	1: "DONE",
}
var StatusType_value = map[string]int32{
	"WILL": 0,
	"DONE": 1,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}
func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_clock_4cab62f4d5c069d3, []int{1}
}

type ClockService struct {
	// api.common.Time time_ = 1;
	ClockType            ClockType  `protobuf:"varint,2,opt,name=clock_type,json=clockType,proto3,enum=api.clock.ClockType" json:"clock_type,omitempty"`
	NumCycle             uint32     `protobuf:"varint,3,opt,name=num_cycle,json=numCycle,proto3" json:"num_cycle,omitempty"`
	StatusType           StatusType `protobuf:"varint,4,opt,name=status_type,json=statusType,proto3,enum=api.clock.StatusType" json:"status_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClockService) Reset()         { *m = ClockService{} }
func (m *ClockService) String() string { return proto.CompactTextString(m) }
func (*ClockService) ProtoMessage()    {}
func (*ClockService) Descriptor() ([]byte, []int) {
	return fileDescriptor_clock_4cab62f4d5c069d3, []int{0}
}
func (m *ClockService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClockService.Unmarshal(m, b)
}
func (m *ClockService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClockService.Marshal(b, m, deterministic)
}
func (dst *ClockService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClockService.Merge(dst, src)
}
func (m *ClockService) XXX_Size() int {
	return xxx_messageInfo_ClockService.Size(m)
}
func (m *ClockService) XXX_DiscardUnknown() {
	xxx_messageInfo_ClockService.DiscardUnknown(m)
}

var xxx_messageInfo_ClockService proto.InternalMessageInfo

func (m *ClockService) GetClockType() ClockType {
	if m != nil {
		return m.ClockType
	}
	return ClockType_FORWARD
}

func (m *ClockService) GetNumCycle() uint32 {
	if m != nil {
		return m.NumCycle
	}
	return 0
}

func (m *ClockService) GetStatusType() StatusType {
	if m != nil {
		return m.StatusType
	}
	return StatusType_WILL
}

func init() {
	proto.RegisterType((*ClockService)(nil), "api.clock.ClockService")
	proto.RegisterEnum("api.clock.ClockType", ClockType_name, ClockType_value)
	proto.RegisterEnum("api.clock.StatusType", StatusType_name, StatusType_value)
}

func init() { proto.RegisterFile("simulation/clock/clock.proto", fileDescriptor_clock_4cab62f4d5c069d3) }

var fileDescriptor_clock_4cab62f4d5c069d3 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xce, 0xcc, 0x2d,
	0xcd, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x4f, 0xce, 0xc9, 0x4f, 0xce, 0x86, 0x90, 0x7a, 0x05,
	0x45, 0xf9, 0x25, 0xf9, 0x42, 0x9c, 0x89, 0x05, 0x99, 0x7a, 0x60, 0x01, 0xa5, 0x19, 0x8c, 0x5c,
	0x3c, 0xce, 0x20, 0x56, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x31, 0x17, 0x17, 0x58,
	0x26, 0xbe, 0xa4, 0xb2, 0x20, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0xcf, 0x48, 0x44, 0x0f, 0xae,
	0x41, 0x0f, 0xac, 0x38, 0xa4, 0xb2, 0x20, 0x35, 0x88, 0x33, 0x19, 0xc6, 0x14, 0x92, 0xe6, 0xe2,
	0xcc, 0x2b, 0xcd, 0x8d, 0x4f, 0xae, 0x4c, 0xce, 0x49, 0x95, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0d,
	0xe2, 0xc8, 0x2b, 0xcd, 0x75, 0x06, 0xf1, 0x85, 0xcc, 0xb8, 0xb8, 0x8b, 0x4b, 0x12, 0x4b, 0x4a,
	0x8b, 0x21, 0x46, 0xb2, 0x80, 0x8d, 0x14, 0x45, 0x32, 0x32, 0x18, 0x2c, 0x0b, 0x36, 0x93, 0xab,
	0x18, 0xce, 0xd6, 0xd2, 0xe6, 0xe2, 0x84, 0x5b, 0x26, 0xc4, 0xcd, 0xc5, 0xee, 0xe6, 0x1f, 0x14,
	0xee, 0x18, 0xe4, 0x22, 0xc0, 0x20, 0xc4, 0xc1, 0xc5, 0xe2, 0xe4, 0xe8, 0xec, 0x2d, 0xc0, 0x28,
	0xc4, 0xce, 0xc5, 0x1c, 0xec, 0x1a, 0x22, 0xc0, 0xa4, 0xa5, 0xc0, 0xc5, 0x85, 0x30, 0x06, 0xa4,
	0x20, 0xdc, 0xd3, 0xc7, 0x07, 0xa2, 0xd4, 0xc5, 0xdf, 0xcf, 0x55, 0x80, 0xd1, 0xc9, 0x3c, 0xca,
	0x34, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0xbf, 0xb8, 0x32, 0x2f, 0xb5,
	0x28, 0xb5, 0x02, 0x46, 0xc7, 0x27, 0xe6, 0x14, 0x64, 0x24, 0xea, 0x27, 0x16, 0x64, 0xea, 0xa3,
	0x87, 0x5c, 0x12, 0x1b, 0x38, 0xd0, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x50, 0xe2,
	0x6e, 0x54, 0x01, 0x00, 0x00,
}
