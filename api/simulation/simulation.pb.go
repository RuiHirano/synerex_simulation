// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simulation/simulation.proto

package simulation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	agent "github.com/synerex/synerex_alpha/api/simulation/agent"
	clock "github.com/synerex/synerex_alpha/api/simulation/clock"
	provider "github.com/synerex/synerex_alpha/api/simulation/provider"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusType int32

const (
	StatusType_OK   StatusType = 0
	StatusType_NG   StatusType = 1
	StatusType_NONE StatusType = 2
)

var StatusType_name = map[int32]string{
	0: "OK",
	1: "NG",
	2: "NONE",
}

var StatusType_value = map[string]int32{
	"OK":   0,
	"NG":   1,
	"NONE": 2,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}

func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_17e12b66aec6c312, []int{0}
}

type DemandType int32

const (
	DemandType_GET_AGENTS_REQUEST           DemandType = 0
	DemandType_SET_AGENTS_REQUEST           DemandType = 1
	DemandType_REGIST_PROVIDER_REQUEST      DemandType = 2
	DemandType_KILL_PROVIDER_REQUEST        DemandType = 3
	DemandType_DIVIDE_PROVIDER_REQUEST      DemandType = 4
	DemandType_UPDATE_PROVIDERS_REQUEST     DemandType = 5
	DemandType_SEND_PROVIDER_STATUS_REQUEST DemandType = 6
	DemandType_GET_CLOCK_REQUEST            DemandType = 7
	DemandType_SET_CLOCK_REQUEST            DemandType = 8
	DemandType_UPDATE_CLOCK_REQUEST         DemandType = 9
	DemandType_START_CLOCK_REQUEST          DemandType = 10
	DemandType_STOP_CLOCK_REQUEST           DemandType = 11
	DemandType_FORWARD_CLOCK_REQUEST        DemandType = 12
	DemandType_BACK_CLOCK_REQUEST           DemandType = 13
)

var DemandType_name = map[int32]string{
	0:  "GET_AGENTS_REQUEST",
	1:  "SET_AGENTS_REQUEST",
	2:  "REGIST_PROVIDER_REQUEST",
	3:  "KILL_PROVIDER_REQUEST",
	4:  "DIVIDE_PROVIDER_REQUEST",
	5:  "UPDATE_PROVIDERS_REQUEST",
	6:  "SEND_PROVIDER_STATUS_REQUEST",
	7:  "GET_CLOCK_REQUEST",
	8:  "SET_CLOCK_REQUEST",
	9:  "UPDATE_CLOCK_REQUEST",
	10: "START_CLOCK_REQUEST",
	11: "STOP_CLOCK_REQUEST",
	12: "FORWARD_CLOCK_REQUEST",
	13: "BACK_CLOCK_REQUEST",
}

var DemandType_value = map[string]int32{
	"GET_AGENTS_REQUEST":           0,
	"SET_AGENTS_REQUEST":           1,
	"REGIST_PROVIDER_REQUEST":      2,
	"KILL_PROVIDER_REQUEST":        3,
	"DIVIDE_PROVIDER_REQUEST":      4,
	"UPDATE_PROVIDERS_REQUEST":     5,
	"SEND_PROVIDER_STATUS_REQUEST": 6,
	"GET_CLOCK_REQUEST":            7,
	"SET_CLOCK_REQUEST":            8,
	"UPDATE_CLOCK_REQUEST":         9,
	"START_CLOCK_REQUEST":          10,
	"STOP_CLOCK_REQUEST":           11,
	"FORWARD_CLOCK_REQUEST":        12,
	"BACK_CLOCK_REQUEST":           13,
}

func (x DemandType) String() string {
	return proto.EnumName(DemandType_name, int32(x))
}

func (DemandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_17e12b66aec6c312, []int{1}
}

type SupplyType int32

const (
	SupplyType_GET_AGENTS_RESPONSE           SupplyType = 0
	SupplyType_SET_AGENTS_RESPONSE           SupplyType = 1
	SupplyType_REGIST_PROVIDER_RESPONSE      SupplyType = 2
	SupplyType_KILL_PROVIDER_RESPONSE        SupplyType = 3
	SupplyType_DIVIDE_PROVIDER_RESPONSE      SupplyType = 4
	SupplyType_UPDATE_PROVIDERS_RESPONSE     SupplyType = 5
	SupplyType_SEND_PROVIDER_STATUS_RESPONSE SupplyType = 6
	SupplyType_GET_CLOCK_RESPONSE            SupplyType = 7
	SupplyType_SET_CLOCK_RESPONSE            SupplyType = 8
	SupplyType_UPDATE_CLOCK_RESPONSE         SupplyType = 9
	SupplyType_START_CLOCK_RESPONSE          SupplyType = 10
	SupplyType_STOP_CLOCK_RESPONSE           SupplyType = 11
	SupplyType_FORWARD_CLOCK_RESPONSE        SupplyType = 12
	SupplyType_BACK_CLOCK_RESPONSE           SupplyType = 13
)

var SupplyType_name = map[int32]string{
	0:  "GET_AGENTS_RESPONSE",
	1:  "SET_AGENTS_RESPONSE",
	2:  "REGIST_PROVIDER_RESPONSE",
	3:  "KILL_PROVIDER_RESPONSE",
	4:  "DIVIDE_PROVIDER_RESPONSE",
	5:  "UPDATE_PROVIDERS_RESPONSE",
	6:  "SEND_PROVIDER_STATUS_RESPONSE",
	7:  "GET_CLOCK_RESPONSE",
	8:  "SET_CLOCK_RESPONSE",
	9:  "UPDATE_CLOCK_RESPONSE",
	10: "START_CLOCK_RESPONSE",
	11: "STOP_CLOCK_RESPONSE",
	12: "FORWARD_CLOCK_RESPONSE",
	13: "BACK_CLOCK_RESPONSE",
}

var SupplyType_value = map[string]int32{
	"GET_AGENTS_RESPONSE":           0,
	"SET_AGENTS_RESPONSE":           1,
	"REGIST_PROVIDER_RESPONSE":      2,
	"KILL_PROVIDER_RESPONSE":        3,
	"DIVIDE_PROVIDER_RESPONSE":      4,
	"UPDATE_PROVIDERS_RESPONSE":     5,
	"SEND_PROVIDER_STATUS_RESPONSE": 6,
	"GET_CLOCK_RESPONSE":            7,
	"SET_CLOCK_RESPONSE":            8,
	"UPDATE_CLOCK_RESPONSE":         9,
	"START_CLOCK_RESPONSE":          10,
	"STOP_CLOCK_RESPONSE":           11,
	"FORWARD_CLOCK_RESPONSE":        12,
	"BACK_CLOCK_RESPONSE":           13,
}

func (x SupplyType) String() string {
	return proto.EnumName(SupplyType_name, int32(x))
}

func (SupplyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_17e12b66aec6c312, []int{2}
}

type SimDemand struct {
	Pid uint64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// provider info
	Type DemandType `protobuf:"varint,2,opt,name=type,proto3,enum=api.simulation.DemandType" json:"type,omitempty"`
	// meta data
	Status StatusType `protobuf:"varint,3,opt,name=status,proto3,enum=api.simulation.StatusType" json:"status,omitempty"`
	Meta   string     `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	// demand data
	//
	// Types that are valid to be assigned to Data:
	//	*SimDemand_SetAgentsRequest
	//	*SimDemand_GetAgentsRequest
	//	*SimDemand_RegistProviderRequest
	//	*SimDemand_KillProviderRequest
	//	*SimDemand_DivideProviderRequest
	//	*SimDemand_UpdateProvidersRequest
	//	*SimDemand_SendProviderStatusRequest
	//	*SimDemand_GetClockRequest
	//	*SimDemand_SetClockRequest
	//	*SimDemand_UpdateClockRequest
	//	*SimDemand_StartClockRequest
	//	*SimDemand_StopClockRequest
	//	*SimDemand_ForwardClockRequest
	//	*SimDemand_BackClockRequest
	Data                 isSimDemand_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SimDemand) Reset()         { *m = SimDemand{} }
func (m *SimDemand) String() string { return proto.CompactTextString(m) }
func (*SimDemand) ProtoMessage()    {}
func (*SimDemand) Descriptor() ([]byte, []int) {
	return fileDescriptor_17e12b66aec6c312, []int{0}
}

func (m *SimDemand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimDemand.Unmarshal(m, b)
}
func (m *SimDemand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimDemand.Marshal(b, m, deterministic)
}
func (m *SimDemand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimDemand.Merge(m, src)
}
func (m *SimDemand) XXX_Size() int {
	return xxx_messageInfo_SimDemand.Size(m)
}
func (m *SimDemand) XXX_DiscardUnknown() {
	xxx_messageInfo_SimDemand.DiscardUnknown(m)
}

var xxx_messageInfo_SimDemand proto.InternalMessageInfo

func (m *SimDemand) GetPid() uint64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SimDemand) GetType() DemandType {
	if m != nil {
		return m.Type
	}
	return DemandType_GET_AGENTS_REQUEST
}

func (m *SimDemand) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_OK
}

func (m *SimDemand) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

type isSimDemand_Data interface {
	isSimDemand_Data()
}

type SimDemand_SetAgentsRequest struct {
	SetAgentsRequest *agent.SetAgentsRequest `protobuf:"bytes,5,opt,name=set_agents_request,json=setAgentsRequest,proto3,oneof"`
}

type SimDemand_GetAgentsRequest struct {
	GetAgentsRequest *agent.GetAgentsRequest `protobuf:"bytes,6,opt,name=get_agents_request,json=getAgentsRequest,proto3,oneof"`
}

type SimDemand_RegistProviderRequest struct {
	RegistProviderRequest *provider.RegistProviderRequest `protobuf:"bytes,7,opt,name=regist_provider_request,json=registProviderRequest,proto3,oneof"`
}

type SimDemand_KillProviderRequest struct {
	KillProviderRequest *provider.KillProviderRequest `protobuf:"bytes,8,opt,name=kill_provider_request,json=killProviderRequest,proto3,oneof"`
}

type SimDemand_DivideProviderRequest struct {
	DivideProviderRequest *provider.DivideProviderRequest `protobuf:"bytes,9,opt,name=divide_provider_request,json=divideProviderRequest,proto3,oneof"`
}

type SimDemand_UpdateProvidersRequest struct {
	UpdateProvidersRequest *provider.UpdateProvidersRequest `protobuf:"bytes,10,opt,name=update_providers_request,json=updateProvidersRequest,proto3,oneof"`
}

type SimDemand_SendProviderStatusRequest struct {
	SendProviderStatusRequest *provider.SendProviderStatusRequest `protobuf:"bytes,11,opt,name=send_provider_status_request,json=sendProviderStatusRequest,proto3,oneof"`
}

type SimDemand_GetClockRequest struct {
	GetClockRequest *clock.GetClockRequest `protobuf:"bytes,12,opt,name=get_clock_request,json=getClockRequest,proto3,oneof"`
}

type SimDemand_SetClockRequest struct {
	SetClockRequest *clock.SetClockRequest `protobuf:"bytes,13,opt,name=set_clock_request,json=setClockRequest,proto3,oneof"`
}

type SimDemand_UpdateClockRequest struct {
	UpdateClockRequest *clock.UpdateClockRequest `protobuf:"bytes,14,opt,name=update_clock_request,json=updateClockRequest,proto3,oneof"`
}

type SimDemand_StartClockRequest struct {
	StartClockRequest *clock.StartClockRequest `protobuf:"bytes,15,opt,name=start_clock_request,json=startClockRequest,proto3,oneof"`
}

type SimDemand_StopClockRequest struct {
	StopClockRequest *clock.StopClockRequest `protobuf:"bytes,16,opt,name=stop_clock_request,json=stopClockRequest,proto3,oneof"`
}

type SimDemand_ForwardClockRequest struct {
	ForwardClockRequest *clock.ForwardClockRequest `protobuf:"bytes,17,opt,name=forward_clock_request,json=forwardClockRequest,proto3,oneof"`
}

type SimDemand_BackClockRequest struct {
	BackClockRequest *clock.BackClockRequest `protobuf:"bytes,18,opt,name=back_clock_request,json=backClockRequest,proto3,oneof"`
}

func (*SimDemand_SetAgentsRequest) isSimDemand_Data() {}

func (*SimDemand_GetAgentsRequest) isSimDemand_Data() {}

func (*SimDemand_RegistProviderRequest) isSimDemand_Data() {}

func (*SimDemand_KillProviderRequest) isSimDemand_Data() {}

func (*SimDemand_DivideProviderRequest) isSimDemand_Data() {}

func (*SimDemand_UpdateProvidersRequest) isSimDemand_Data() {}

func (*SimDemand_SendProviderStatusRequest) isSimDemand_Data() {}

func (*SimDemand_GetClockRequest) isSimDemand_Data() {}

func (*SimDemand_SetClockRequest) isSimDemand_Data() {}

func (*SimDemand_UpdateClockRequest) isSimDemand_Data() {}

func (*SimDemand_StartClockRequest) isSimDemand_Data() {}

func (*SimDemand_StopClockRequest) isSimDemand_Data() {}

func (*SimDemand_ForwardClockRequest) isSimDemand_Data() {}

func (*SimDemand_BackClockRequest) isSimDemand_Data() {}

func (m *SimDemand) GetData() isSimDemand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SimDemand) GetSetAgentsRequest() *agent.SetAgentsRequest {
	if x, ok := m.GetData().(*SimDemand_SetAgentsRequest); ok {
		return x.SetAgentsRequest
	}
	return nil
}

func (m *SimDemand) GetGetAgentsRequest() *agent.GetAgentsRequest {
	if x, ok := m.GetData().(*SimDemand_GetAgentsRequest); ok {
		return x.GetAgentsRequest
	}
	return nil
}

func (m *SimDemand) GetRegistProviderRequest() *provider.RegistProviderRequest {
	if x, ok := m.GetData().(*SimDemand_RegistProviderRequest); ok {
		return x.RegistProviderRequest
	}
	return nil
}

func (m *SimDemand) GetKillProviderRequest() *provider.KillProviderRequest {
	if x, ok := m.GetData().(*SimDemand_KillProviderRequest); ok {
		return x.KillProviderRequest
	}
	return nil
}

func (m *SimDemand) GetDivideProviderRequest() *provider.DivideProviderRequest {
	if x, ok := m.GetData().(*SimDemand_DivideProviderRequest); ok {
		return x.DivideProviderRequest
	}
	return nil
}

func (m *SimDemand) GetUpdateProvidersRequest() *provider.UpdateProvidersRequest {
	if x, ok := m.GetData().(*SimDemand_UpdateProvidersRequest); ok {
		return x.UpdateProvidersRequest
	}
	return nil
}

func (m *SimDemand) GetSendProviderStatusRequest() *provider.SendProviderStatusRequest {
	if x, ok := m.GetData().(*SimDemand_SendProviderStatusRequest); ok {
		return x.SendProviderStatusRequest
	}
	return nil
}

func (m *SimDemand) GetGetClockRequest() *clock.GetClockRequest {
	if x, ok := m.GetData().(*SimDemand_GetClockRequest); ok {
		return x.GetClockRequest
	}
	return nil
}

func (m *SimDemand) GetSetClockRequest() *clock.SetClockRequest {
	if x, ok := m.GetData().(*SimDemand_SetClockRequest); ok {
		return x.SetClockRequest
	}
	return nil
}

func (m *SimDemand) GetUpdateClockRequest() *clock.UpdateClockRequest {
	if x, ok := m.GetData().(*SimDemand_UpdateClockRequest); ok {
		return x.UpdateClockRequest
	}
	return nil
}

func (m *SimDemand) GetStartClockRequest() *clock.StartClockRequest {
	if x, ok := m.GetData().(*SimDemand_StartClockRequest); ok {
		return x.StartClockRequest
	}
	return nil
}

func (m *SimDemand) GetStopClockRequest() *clock.StopClockRequest {
	if x, ok := m.GetData().(*SimDemand_StopClockRequest); ok {
		return x.StopClockRequest
	}
	return nil
}

func (m *SimDemand) GetForwardClockRequest() *clock.ForwardClockRequest {
	if x, ok := m.GetData().(*SimDemand_ForwardClockRequest); ok {
		return x.ForwardClockRequest
	}
	return nil
}

func (m *SimDemand) GetBackClockRequest() *clock.BackClockRequest {
	if x, ok := m.GetData().(*SimDemand_BackClockRequest); ok {
		return x.BackClockRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SimDemand) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SimDemand_SetAgentsRequest)(nil),
		(*SimDemand_GetAgentsRequest)(nil),
		(*SimDemand_RegistProviderRequest)(nil),
		(*SimDemand_KillProviderRequest)(nil),
		(*SimDemand_DivideProviderRequest)(nil),
		(*SimDemand_UpdateProvidersRequest)(nil),
		(*SimDemand_SendProviderStatusRequest)(nil),
		(*SimDemand_GetClockRequest)(nil),
		(*SimDemand_SetClockRequest)(nil),
		(*SimDemand_UpdateClockRequest)(nil),
		(*SimDemand_StartClockRequest)(nil),
		(*SimDemand_StopClockRequest)(nil),
		(*SimDemand_ForwardClockRequest)(nil),
		(*SimDemand_BackClockRequest)(nil),
	}
}

type SimSupply struct {
	Pid uint64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// demand type
	Type SupplyType `protobuf:"varint,2,opt,name=type,proto3,enum=api.simulation.SupplyType" json:"type,omitempty"`
	// meta data
	Status StatusType `protobuf:"varint,3,opt,name=status,proto3,enum=api.simulation.StatusType" json:"status,omitempty"`
	Meta   string     `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	// supply data
	//
	// Types that are valid to be assigned to Data:
	//	*SimSupply_SetAgentsResponse
	//	*SimSupply_GetAgentsResponse
	//	*SimSupply_RegistProviderResponse
	//	*SimSupply_KillProviderResponse
	//	*SimSupply_DivideProviderResponse
	//	*SimSupply_UpdateProvidersResponse
	//	*SimSupply_SendProviderStatusResponse
	//	*SimSupply_GetClockResponse
	//	*SimSupply_SetClockResponse
	//	*SimSupply_UpdateClockResponse
	//	*SimSupply_StartClockResponse
	//	*SimSupply_StopClockResponse
	//	*SimSupply_ForwardClockResponse
	//	*SimSupply_BackClockResponse
	Data                 isSimSupply_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SimSupply) Reset()         { *m = SimSupply{} }
func (m *SimSupply) String() string { return proto.CompactTextString(m) }
func (*SimSupply) ProtoMessage()    {}
func (*SimSupply) Descriptor() ([]byte, []int) {
	return fileDescriptor_17e12b66aec6c312, []int{1}
}

func (m *SimSupply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimSupply.Unmarshal(m, b)
}
func (m *SimSupply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimSupply.Marshal(b, m, deterministic)
}
func (m *SimSupply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimSupply.Merge(m, src)
}
func (m *SimSupply) XXX_Size() int {
	return xxx_messageInfo_SimSupply.Size(m)
}
func (m *SimSupply) XXX_DiscardUnknown() {
	xxx_messageInfo_SimSupply.DiscardUnknown(m)
}

var xxx_messageInfo_SimSupply proto.InternalMessageInfo

func (m *SimSupply) GetPid() uint64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SimSupply) GetType() SupplyType {
	if m != nil {
		return m.Type
	}
	return SupplyType_GET_AGENTS_RESPONSE
}

func (m *SimSupply) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_OK
}

func (m *SimSupply) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

type isSimSupply_Data interface {
	isSimSupply_Data()
}

type SimSupply_SetAgentsResponse struct {
	SetAgentsResponse *agent.SetAgentsResponse `protobuf:"bytes,5,opt,name=set_agents_response,json=setAgentsResponse,proto3,oneof"`
}

type SimSupply_GetAgentsResponse struct {
	GetAgentsResponse *agent.GetAgentsResponse `protobuf:"bytes,6,opt,name=get_agents_response,json=getAgentsResponse,proto3,oneof"`
}

type SimSupply_RegistProviderResponse struct {
	RegistProviderResponse *provider.RegistProviderResponse `protobuf:"bytes,7,opt,name=regist_provider_response,json=registProviderResponse,proto3,oneof"`
}

type SimSupply_KillProviderResponse struct {
	KillProviderResponse *provider.KillProviderResponse `protobuf:"bytes,8,opt,name=kill_provider_response,json=killProviderResponse,proto3,oneof"`
}

type SimSupply_DivideProviderResponse struct {
	DivideProviderResponse *provider.DivideProviderResponse `protobuf:"bytes,9,opt,name=divide_provider_response,json=divideProviderResponse,proto3,oneof"`
}

type SimSupply_UpdateProvidersResponse struct {
	UpdateProvidersResponse *provider.UpdateProvidersResponse `protobuf:"bytes,10,opt,name=update_providers_response,json=updateProvidersResponse,proto3,oneof"`
}

type SimSupply_SendProviderStatusResponse struct {
	SendProviderStatusResponse *provider.SendProviderStatusResponse `protobuf:"bytes,11,opt,name=send_provider_status_response,json=sendProviderStatusResponse,proto3,oneof"`
}

type SimSupply_GetClockResponse struct {
	GetClockResponse *clock.GetClockResponse `protobuf:"bytes,12,opt,name=get_clock_response,json=getClockResponse,proto3,oneof"`
}

type SimSupply_SetClockResponse struct {
	SetClockResponse *clock.SetClockResponse `protobuf:"bytes,13,opt,name=set_clock_response,json=setClockResponse,proto3,oneof"`
}

type SimSupply_UpdateClockResponse struct {
	UpdateClockResponse *clock.UpdateClockResponse `protobuf:"bytes,14,opt,name=update_clock_response,json=updateClockResponse,proto3,oneof"`
}

type SimSupply_StartClockResponse struct {
	StartClockResponse *clock.StartClockResponse `protobuf:"bytes,15,opt,name=start_clock_response,json=startClockResponse,proto3,oneof"`
}

type SimSupply_StopClockResponse struct {
	StopClockResponse *clock.StopClockResponse `protobuf:"bytes,16,opt,name=stop_clock_response,json=stopClockResponse,proto3,oneof"`
}

type SimSupply_ForwardClockResponse struct {
	ForwardClockResponse *clock.ForwardClockResponse `protobuf:"bytes,17,opt,name=forward_clock_response,json=forwardClockResponse,proto3,oneof"`
}

type SimSupply_BackClockResponse struct {
	BackClockResponse *clock.BackClockResponse `protobuf:"bytes,18,opt,name=back_clock_response,json=backClockResponse,proto3,oneof"`
}

func (*SimSupply_SetAgentsResponse) isSimSupply_Data() {}

func (*SimSupply_GetAgentsResponse) isSimSupply_Data() {}

func (*SimSupply_RegistProviderResponse) isSimSupply_Data() {}

func (*SimSupply_KillProviderResponse) isSimSupply_Data() {}

func (*SimSupply_DivideProviderResponse) isSimSupply_Data() {}

func (*SimSupply_UpdateProvidersResponse) isSimSupply_Data() {}

func (*SimSupply_SendProviderStatusResponse) isSimSupply_Data() {}

func (*SimSupply_GetClockResponse) isSimSupply_Data() {}

func (*SimSupply_SetClockResponse) isSimSupply_Data() {}

func (*SimSupply_UpdateClockResponse) isSimSupply_Data() {}

func (*SimSupply_StartClockResponse) isSimSupply_Data() {}

func (*SimSupply_StopClockResponse) isSimSupply_Data() {}

func (*SimSupply_ForwardClockResponse) isSimSupply_Data() {}

func (*SimSupply_BackClockResponse) isSimSupply_Data() {}

func (m *SimSupply) GetData() isSimSupply_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SimSupply) GetSetAgentsResponse() *agent.SetAgentsResponse {
	if x, ok := m.GetData().(*SimSupply_SetAgentsResponse); ok {
		return x.SetAgentsResponse
	}
	return nil
}

func (m *SimSupply) GetGetAgentsResponse() *agent.GetAgentsResponse {
	if x, ok := m.GetData().(*SimSupply_GetAgentsResponse); ok {
		return x.GetAgentsResponse
	}
	return nil
}

func (m *SimSupply) GetRegistProviderResponse() *provider.RegistProviderResponse {
	if x, ok := m.GetData().(*SimSupply_RegistProviderResponse); ok {
		return x.RegistProviderResponse
	}
	return nil
}

func (m *SimSupply) GetKillProviderResponse() *provider.KillProviderResponse {
	if x, ok := m.GetData().(*SimSupply_KillProviderResponse); ok {
		return x.KillProviderResponse
	}
	return nil
}

func (m *SimSupply) GetDivideProviderResponse() *provider.DivideProviderResponse {
	if x, ok := m.GetData().(*SimSupply_DivideProviderResponse); ok {
		return x.DivideProviderResponse
	}
	return nil
}

func (m *SimSupply) GetUpdateProvidersResponse() *provider.UpdateProvidersResponse {
	if x, ok := m.GetData().(*SimSupply_UpdateProvidersResponse); ok {
		return x.UpdateProvidersResponse
	}
	return nil
}

func (m *SimSupply) GetSendProviderStatusResponse() *provider.SendProviderStatusResponse {
	if x, ok := m.GetData().(*SimSupply_SendProviderStatusResponse); ok {
		return x.SendProviderStatusResponse
	}
	return nil
}

func (m *SimSupply) GetGetClockResponse() *clock.GetClockResponse {
	if x, ok := m.GetData().(*SimSupply_GetClockResponse); ok {
		return x.GetClockResponse
	}
	return nil
}

func (m *SimSupply) GetSetClockResponse() *clock.SetClockResponse {
	if x, ok := m.GetData().(*SimSupply_SetClockResponse); ok {
		return x.SetClockResponse
	}
	return nil
}

func (m *SimSupply) GetUpdateClockResponse() *clock.UpdateClockResponse {
	if x, ok := m.GetData().(*SimSupply_UpdateClockResponse); ok {
		return x.UpdateClockResponse
	}
	return nil
}

func (m *SimSupply) GetStartClockResponse() *clock.StartClockResponse {
	if x, ok := m.GetData().(*SimSupply_StartClockResponse); ok {
		return x.StartClockResponse
	}
	return nil
}

func (m *SimSupply) GetStopClockResponse() *clock.StopClockResponse {
	if x, ok := m.GetData().(*SimSupply_StopClockResponse); ok {
		return x.StopClockResponse
	}
	return nil
}

func (m *SimSupply) GetForwardClockResponse() *clock.ForwardClockResponse {
	if x, ok := m.GetData().(*SimSupply_ForwardClockResponse); ok {
		return x.ForwardClockResponse
	}
	return nil
}

func (m *SimSupply) GetBackClockResponse() *clock.BackClockResponse {
	if x, ok := m.GetData().(*SimSupply_BackClockResponse); ok {
		return x.BackClockResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SimSupply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SimSupply_SetAgentsResponse)(nil),
		(*SimSupply_GetAgentsResponse)(nil),
		(*SimSupply_RegistProviderResponse)(nil),
		(*SimSupply_KillProviderResponse)(nil),
		(*SimSupply_DivideProviderResponse)(nil),
		(*SimSupply_UpdateProvidersResponse)(nil),
		(*SimSupply_SendProviderStatusResponse)(nil),
		(*SimSupply_GetClockResponse)(nil),
		(*SimSupply_SetClockResponse)(nil),
		(*SimSupply_UpdateClockResponse)(nil),
		(*SimSupply_StartClockResponse)(nil),
		(*SimSupply_StopClockResponse)(nil),
		(*SimSupply_ForwardClockResponse)(nil),
		(*SimSupply_BackClockResponse)(nil),
	}
}

func init() {
	proto.RegisterEnum("api.simulation.StatusType", StatusType_name, StatusType_value)
	proto.RegisterEnum("api.simulation.DemandType", DemandType_name, DemandType_value)
	proto.RegisterEnum("api.simulation.SupplyType", SupplyType_name, SupplyType_value)
	proto.RegisterType((*SimDemand)(nil), "api.simulation.SimDemand")
	proto.RegisterType((*SimSupply)(nil), "api.simulation.SimSupply")
}

func init() { proto.RegisterFile("simulation/simulation.proto", fileDescriptor_17e12b66aec6c312) }

var fileDescriptor_17e12b66aec6c312 = []byte{
	// 1119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x97, 0xeb, 0x6e, 0xe2, 0x46,
	0x18, 0x86, 0x03, 0x21, 0x24, 0x7c, 0x39, 0x39, 0x93, 0x40, 0x48, 0x42, 0xda, 0x6c, 0x7a, 0x8a,
	0xf2, 0x83, 0xa8, 0xe9, 0x15, 0x90, 0xc0, 0xb2, 0x11, 0x11, 0xb0, 0xb6, 0xd3, 0x48, 0x2b, 0x55,
	0xac, 0xc1, 0x0e, 0xeb, 0x72, 0xb0, 0xeb, 0xb1, 0xdb, 0xe6, 0x1a, 0x7a, 0x59, 0xbd, 0x9e, 0x5e,
	0x42, 0xa5, 0x6a, 0x0e, 0x3e, 0xcd, 0x0c, 0x5d, 0xf5, 0x47, 0xff, 0x80, 0x79, 0xdf, 0x6f, 0x9e,
	0xf9, 0x3c, 0xe3, 0x79, 0x01, 0x38, 0xc3, 0xee, 0x22, 0x9a, 0x5b, 0xa1, 0xeb, 0x2d, 0x6f, 0xd2,
	0xcb, 0xa6, 0x1f, 0x78, 0xa1, 0x87, 0xf6, 0x2c, 0xdf, 0x6d, 0xa6, 0xea, 0x69, 0x23, 0x53, 0x6c,
	0x4d, 0x9d, 0x65, 0xc8, 0x5e, 0x59, 0x75, 0xce, 0x9d, 0xcc, 0xbd, 0xc9, 0x8c, 0xbd, 0x72, 0xf7,
	0x32, 0xe3, 0xfa, 0x81, 0xf7, 0xab, 0x6b, 0x3b, 0x41, 0x72, 0xc1, 0x6a, 0x2e, 0xff, 0x04, 0xa8,
	0x18, 0xee, 0xa2, 0xed, 0x2c, 0xac, 0xa5, 0x8d, 0x34, 0x58, 0xf7, 0x5d, 0xbb, 0x5e, 0xb8, 0x28,
	0x5c, 0x95, 0x74, 0x72, 0x89, 0x9a, 0x50, 0x0a, 0x5f, 0x7d, 0xa7, 0x5e, 0xbc, 0x28, 0x5c, 0xed,
	0xdd, 0x9e, 0x36, 0xf3, 0xed, 0x35, 0xd9, 0x38, 0xf3, 0xd5, 0x77, 0x74, 0x5a, 0x87, 0x6e, 0xa1,
	0x8c, 0x43, 0x2b, 0x8c, 0x70, 0x7d, 0x5d, 0x3d, 0xc2, 0xa0, 0x2e, 0x1d, 0xc1, 0x2b, 0x11, 0x82,
	0xd2, 0xc2, 0x09, 0xad, 0x7a, 0xe9, 0xa2, 0x70, 0x55, 0xd1, 0xe9, 0x35, 0xea, 0x01, 0xc2, 0x4e,
	0x38, 0xa2, 0x37, 0x8b, 0x47, 0x81, 0xf3, 0x4b, 0xe4, 0xe0, 0xb0, 0xbe, 0x71, 0x51, 0xb8, 0xda,
	0xbe, 0x3d, 0xa3, 0x4c, 0xb6, 0x0e, 0x86, 0x13, 0xb6, 0x68, 0x8d, 0xce, 0x4a, 0xde, 0xad, 0xe9,
	0x1a, 0x16, 0x34, 0x02, 0x9b, 0xca, 0xb0, 0xb2, 0x04, 0xeb, 0x2a, 0x60, 0x53, 0x11, 0xf6, 0x13,
	0x1c, 0x07, 0xce, 0xd4, 0xc5, 0xe1, 0x28, 0x5e, 0xca, 0x84, 0xb8, 0x49, 0x89, 0x5f, 0x51, 0x62,
	0xb2, 0xce, 0x3a, 0x2d, 0x1e, 0xf2, 0x8f, 0x29, 0xb9, 0x1a, 0xa8, 0x0c, 0xf4, 0x0c, 0xd5, 0x99,
	0x3b, 0x9f, 0xcb, 0xf0, 0x2d, 0x0a, 0x7f, 0x93, 0x87, 0xf7, 0xdc, 0xf9, 0x5c, 0x46, 0x1f, 0xce,
	0x64, 0x99, 0xf4, 0x6d, 0xbb, 0x44, 0x91, 0xd1, 0x15, 0x55, 0xdf, 0x6d, 0x5a, 0xac, 0xe8, 0xdb,
	0x56, 0x19, 0xe8, 0x23, 0xd4, 0x23, 0xdf, 0xb6, 0xc2, 0x14, 0x9f, 0xae, 0x34, 0x50, 0xfe, 0xd7,
	0x79, 0xfe, 0x13, 0xad, 0x8e, 0x31, 0x99, 0x25, 0xaf, 0x45, 0x4a, 0x07, 0xfd, 0x0c, 0x0d, 0xec,
	0x2c, 0xed, 0xb4, 0x7d, 0xf6, 0xf8, 0x24, 0xb3, 0x6c, 0xd3, 0x59, 0xbe, 0xcb, 0xcf, 0x62, 0x38,
	0x4b, 0x3b, 0x26, 0xb1, 0x47, 0x2f, 0x9d, 0xe8, 0x04, 0xaf, 0x32, 0xd1, 0x3b, 0x38, 0x20, 0x4f,
	0x0c, 0x3d, 0x4d, 0xc9, 0x04, 0x3b, 0x74, 0x02, 0xf6, 0x44, 0xb3, 0x73, 0xd6, 0x75, 0xc2, 0x7b,
	0x72, 0x91, 0x32, 0xf7, 0xa7, 0x79, 0x89, 0x90, 0xb0, 0x44, 0xda, 0x95, 0x48, 0x86, 0x4c, 0xc2,
	0x02, 0xe9, 0x3d, 0x1c, 0xf1, 0x15, 0xce, 0xc3, 0xf6, 0x28, 0xec, 0x3c, 0x03, 0x63, 0x4b, 0x2b,
	0xf0, 0x50, 0x24, 0xa9, 0xa8, 0x0f, 0x87, 0x38, 0xb4, 0x02, 0xb1, 0xbd, 0x7d, 0x4a, 0x6c, 0x64,
	0xdb, 0x23, 0x55, 0x02, 0xf0, 0x00, 0x8b, 0x22, 0x3d, 0xb5, 0xa1, 0xe7, 0x0b, 0x38, 0x2d, 0x73,
	0xd0, 0x62, 0x9c, 0xe7, 0x0b, 0x34, 0x0d, 0x0b, 0x1a, 0x32, 0xa1, 0xfa, 0xe2, 0x05, 0xbf, 0x59,
	0x81, 0x2d, 0xf0, 0x0e, 0x28, 0xef, 0x8b, 0x0c, 0xef, 0x2d, 0xab, 0x13, 0x90, 0x87, 0x2f, 0xb2,
	0x4c, 0x5a, 0x1c, 0x5b, 0x93, 0x99, 0x80, 0x44, 0x52, 0x8b, 0x77, 0xd6, 0x64, 0x26, 0xb6, 0x38,
	0x16, 0xb4, 0xbb, 0x32, 0x94, 0x6c, 0x2b, 0xb4, 0x2e, 0xff, 0x62, 0x29, 0x6a, 0x44, 0xbe, 0x3f,
	0x7f, 0xfd, 0xef, 0x29, 0xca, 0xc6, 0xfd, 0x0f, 0x29, 0x4a, 0xf6, 0x37, 0x1b, 0x7c, 0xd8, 0xf7,
	0x96, 0xd8, 0xe1, 0x31, 0xda, 0x50, 0xc7, 0x28, 0xab, 0xa1, 0xfb, 0x2b, 0x8a, 0x84, 0x37, 0x55,
	0xf0, 0xca, 0x12, 0xaf, 0xab, 0xe2, 0x4d, 0x25, 0xde, 0x47, 0xa8, 0xcb, 0x59, 0xca, 0xa1, 0x9b,
	0xaa, 0xd0, 0x10, 0xc3, 0x34, 0x81, 0xd7, 0x02, 0xa5, 0x83, 0x3e, 0x40, 0x4d, 0x8c, 0x53, 0xce,
	0x67, 0x79, 0x7a, 0xf9, 0x6f, 0x79, 0x9a, 0xd0, 0x8f, 0x66, 0x0a, 0x9d, 0x74, 0x2f, 0x27, 0x2a,
	0xa7, 0x57, 0x54, 0xdd, 0x8b, 0x91, 0x9a, 0x76, 0x6f, 0x2b, 0x1d, 0x34, 0x81, 0x13, 0x45, 0xa8,
	0xf2, 0x29, 0x58, 0xaa, 0x7e, 0xf3, 0x99, 0x54, 0x4d, 0xe6, 0x38, 0x8e, 0xd4, 0x16, 0x5a, 0xc0,
	0xf9, 0x8a, 0x5c, 0xe5, 0x13, 0xb1, 0x60, 0xbd, 0xfa, 0x7c, 0xb0, 0x26, 0x73, 0x9d, 0xe2, 0x95,
	0x6e, 0xfc, 0x65, 0x1c, 0x9f, 0x3f, 0x3e, 0xc7, 0x8e, 0x74, 0x00, 0xd3, 0x6c, 0x4d, 0xb0, 0xda,
	0x54, 0xd0, 0xe2, 0x9f, 0x09, 0x02, 0x6c, 0x57, 0x0e, 0x1c, 0x05, 0x0c, 0x8b, 0x30, 0x13, 0xaa,
	0x42, 0xc0, 0x72, 0xde, 0x9e, 0x14, 0x38, 0xb9, 0x84, 0x4d, 0x90, 0x87, 0x91, 0x2c, 0x93, 0xd8,
	0xce, 0x67, 0x2c, 0x87, 0xee, 0x4b, 0xb1, 0x9d, 0x0d, 0xd9, 0x84, 0x89, 0xb0, 0xa4, 0xb2, 0xd8,
	0xce, 0xc4, 0x2c, 0x27, 0x6a, 0x8a, 0xd8, 0x4e, 0x32, 0x35, 0x73, 0xac, 0x45, 0x11, 0x3d, 0x43,
	0x4d, 0x4c, 0x5a, 0x8e, 0x64, 0x51, 0xfb, 0xe5, 0xca, 0xa8, 0x4d, 0x4f, 0xc8, 0x8b, 0x42, 0x27,
	0x8d, 0xe6, 0xc2, 0x96, 0x53, 0x91, 0xd4, 0x68, 0x26, 0x6d, 0xd3, 0x46, 0xc7, 0xa2, 0x18, 0xe7,
	0xed, 0xf5, 0xb7, 0x00, 0x69, 0x02, 0xa2, 0x32, 0x14, 0x07, 0x3d, 0x6d, 0x8d, 0xbc, 0xf7, 0xbb,
	0x5a, 0x01, 0x6d, 0x41, 0xa9, 0x3f, 0xe8, 0x77, 0xb4, 0xe2, 0xf5, 0xdf, 0x45, 0x80, 0xf4, 0x27,
	0x2a, 0xaa, 0x01, 0xea, 0x76, 0xcc, 0x51, 0xab, 0xdb, 0xe9, 0x9b, 0xc6, 0x48, 0xef, 0xbc, 0x7f,
	0xea, 0x18, 0xa6, 0xb6, 0x46, 0x74, 0x43, 0xd6, 0x0b, 0xe8, 0x0c, 0x8e, 0xf5, 0x4e, 0xf7, 0xc1,
	0x30, 0x47, 0x43, 0x7d, 0xf0, 0xe3, 0x43, 0xbb, 0xa3, 0x27, 0x66, 0x11, 0x9d, 0x40, 0xb5, 0xf7,
	0xf0, 0xf8, 0x28, 0x5b, 0xeb, 0x64, 0x5c, 0xfb, 0x81, 0x88, 0xb2, 0x59, 0x42, 0x0d, 0xa8, 0x3f,
	0x0d, 0xdb, 0x2d, 0x33, 0x35, 0xd3, 0x29, 0x37, 0xd0, 0x05, 0x34, 0x8c, 0x4e, 0xbf, 0x9d, 0x0e,
	0x34, 0xcc, 0x96, 0xf9, 0x94, 0x56, 0x94, 0x51, 0x15, 0x0e, 0xc8, 0x4d, 0xdc, 0x3f, 0x0e, 0xee,
	0x7b, 0x89, 0xbc, 0x49, 0x64, 0x43, 0x92, 0xb7, 0x50, 0x1d, 0x8e, 0xf8, 0x6c, 0x79, 0xa7, 0x82,
	0x8e, 0xe1, 0xd0, 0x30, 0x5b, 0xba, 0x38, 0x04, 0xe8, 0x6a, 0x98, 0x83, 0xa1, 0xa0, 0x6f, 0x93,
	0x1b, 0x7e, 0x3b, 0xd0, 0x9f, 0x5b, 0x7a, 0x5b, 0xb0, 0x76, 0xc8, 0x90, 0xbb, 0xd6, 0x7d, 0x4f,
	0xd0, 0x77, 0xaf, 0xff, 0x58, 0x07, 0x48, 0xbf, 0xdc, 0xc8, 0x94, 0xb9, 0xf5, 0x37, 0x86, 0x83,
	0xbe, 0xd1, 0xd1, 0xd6, 0x68, 0x2f, 0x0a, 0xa3, 0x40, 0x16, 0x4b, 0xde, 0x01, 0xee, 0x16, 0xd1,
	0x29, 0xd4, 0xc4, 0x2d, 0xe0, 0xde, 0x3a, 0x19, 0x29, 0xef, 0x01, 0x77, 0x4b, 0xe8, 0x1c, 0x4e,
	0x14, 0x9b, 0xc0, 0xed, 0x0d, 0xf4, 0x06, 0xce, 0x57, 0xec, 0x02, 0x2f, 0x29, 0xc7, 0xcf, 0x52,
	0x7c, 0xc7, 0x5c, 0xdf, 0x8c, 0x9f, 0x25, 0x41, 0xdf, 0x22, 0xab, 0x27, 0x6c, 0x04, 0xb7, 0x2a,
	0x64, 0x8f, 0xf2, 0x3b, 0xc1, 0x1d, 0x60, 0x7b, 0x94, 0xd9, 0x0a, 0x6e, 0x6c, 0x93, 0x3b, 0x17,
	0xf7, 0x82, 0x7b, 0x3b, 0x64, 0x50, 0x6e, 0x33, 0xb8, 0xb1, 0x7b, 0xf7, 0xfd, 0x87, 0x9b, 0xa9,
	0x1b, 0x7e, 0x8a, 0xc6, 0xcd, 0x89, 0xb7, 0xb8, 0xc1, 0xaf, 0x4b, 0x27, 0x70, 0x7e, 0x8f, 0xdf,
	0x47, 0xd6, 0xdc, 0xff, 0x64, 0xdd, 0x58, 0xbe, 0x9b, 0xf9, 0x53, 0x3a, 0x2e, 0xd3, 0x7f, 0x89,
	0x3f, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x86, 0x28, 0xc3, 0x61, 0xb4, 0x0e, 0x00, 0x00,
}
